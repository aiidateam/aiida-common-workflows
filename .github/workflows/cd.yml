name: cd

on:
  push:
    tags:
    - v[0-9]+.[0-9]+.[0-9]+*

jobs:

  validate-release-tag:

    if: github.repository == 'aiidateam/aiida-common-workflows'
    runs-on: ubuntu-latest

    steps:
    - name: Checkout source
      uses: actions/checkout@v2

    - name: Set up Python 3.9
      uses: actions/setup-python@v4
      with:
        python-version: '3.9'

    - name: Validate the tag version against the package version
      run: python .github/workflows/validate_release_tag.py $GITHUB_REF

  pre-commit:

    needs: [validate-release-tag]
    runs-on: ubuntu-latest

    steps:
    - uses: actions/checkout@v2

    - name: Install Python
      uses: actions/setup-python@v4
      with:
        python-version: '3.9'
        cache: pip
        cache-dependency-path: pyproject.toml

    - name: Update pip and install wheel
      run: pip install -U pip wheel

    - name: Install Python package and dependencies
      run: pip install -e .[all_plugins,docs,pre-commit,tests]

    - name: Run pre-commit
      run: pre-commit run --all-files || ( git status --short ; git diff ; exit 1 )

  tests:

    needs: [validate-release-tag]
    runs-on: ubuntu-latest
    timeout-minutes: 30

    strategy:
      matrix:
        python-version: ['3.9', '3.10', '3.11', '3.12']

    services:
      rabbitmq:
        image: rabbitmq:latest
        ports:
        - 5672:5672

    steps:
    - uses: actions/checkout@v2

    - name: Install Python ${{ matrix.python-version }}
      uses: actions/setup-python@v4
      with:
        python-version: ${{ matrix.python-version }}
        cache: pip
        cache-dependency-path: pyproject.toml

    - name: Update pip and install wheel
      run: pip install -U pip wheel

    - name: Install Python package and dependencies
      run: pip install -e .[all_plugins,tests]

    - name: Run pytest
      run: pytest -sv tests

  publish:

    name: Publish to PyPI
    needs: [pre-commit, tests]
    runs-on: ubuntu-latest

    steps:
    - name: Checkout source
      uses: actions/checkout@v2

    - name: Set up Python 3.9
      uses: actions/setup-python@v4
      with:
        python-version: '3.9'

    - name: Install flit
      run: pip install flit~=3.4

    - name: Build and publish
      run: flit publish
      env:
        FLIT_USERNAME: __token__
        FLIT_PASSWORD: ${{ secrets.PYPI_KEY }}
